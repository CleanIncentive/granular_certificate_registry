name: CI

on:
  push:
  workflow_dispatch:

jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Setup env vars
        run: cp .env.example .env

      - name: CI specific env vars
        run: |
            touch .env.ci
            echo "${{ secrets.CI_ENV_VARS }}" > .env.ci

      - name: Build Docker container
        run: docker compose build

      - name: Run CI tasks with bind mount
        run: |
          mkdir -p ./coverage
          docker compose -f compose.yml -f compose.ci.yml run -i -T --rm \
            -v ${{ github.workspace }}/coverage:/app/coverage \
            gc_registry make ci
      
      - name: List directory contents
        run: ls -R ./coverage

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2

        if: always()
        with:
          junit_files: "./coverage/coverage.xml"
          comment_mode: always
          check_name: "Unit Tests Results"

      - name: Write to Job Summary
        run: cat ./coverage/coverage.xml >> $GITHUB_STEP_SUMMARY

      - name: Publish coverage as PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Unit Tests Code Coverage
          path: ./coverage/coverage.xml

